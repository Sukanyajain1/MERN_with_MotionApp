{"ast":null,"code":"var _jsxFileName = \"/Users/sukanyajain1/Desktop/git_repos_desktop/MERN_stuff/ninja-pet-generator/src/components/NinjaForm.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NinjaForm = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // create a state variable for each input from the form that we want to collect\n  let [name, setName] = useState(\"\");\n  let [numProjects, setNumProjects] = useState(\"\");\n  let [profileUrl, setProfileUrl] = useState(\"\");\n  let [beltColor, setBeltColor] = useState(\"\");\n\n  // create a submit handler below\n  const submitPet = e => {\n    _s();\n    // e means the object created at the occurance of the event. It stores the value collected during the event if the event is stored in an input tag.\n\n    // the default behavior of a form when it is submitted, is to reload the page. we can prevent this from happening using preventDefault();\n    e.preventDefault();\n\n    // WE WANT TO CREATE AN OBJECT THAT WE CAN STORE ALL THE PET FORM SUBMISSIONS INTO\n    let [] = useState([]);\n    console.log(\"submitted!\");\n  };\n  _s(submitPet, \"MLzCirUkPk8eyS+t5aOXQ/bbN7g=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hi, there! This is the Ninja Form component!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          name: \"\",\n          id: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Number of Projects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setNumProjects(e.target.value),\n          name: \"\",\n          id: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Profile pic url: profileUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setProfileUrl(e.target.value),\n          name: \"\",\n          id: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Belt Color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setBeltColor(e.target.value),\n          name: \"\",\n          id: \"\",\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            hidden: true,\n            children: \"Select a belt color!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"white\",\n            children: \"White\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yellow\",\n            children: \"Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"green\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blue\",\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"red\",\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"black\",\n            children: \"Black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Pet\",\n        className: \"btn btn-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(NinjaForm, \"FXKsIZRxRuxyGqW7x6jtx7o+F8A=\");\n_c = NinjaForm;\nexport default NinjaForm;\nvar _c;\n$RefreshReg$(_c, \"NinjaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NinjaForm","_s2","_s","$RefreshSig$","name","setName","numProjects","setNumProjects","profileUrl","setProfileUrl","beltColor","setBeltColor","submitPet","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","onChange","target","value","id","disabled","selected","hidden","_c","$RefreshReg$"],"sources":["/Users/sukanyajain1/Desktop/git_repos_desktop/MERN_stuff/ninja-pet-generator/src/components/NinjaForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\nconst NinjaForm =()=> {\n\n    // create a state variable for each input from the form that we want to collect\n    let [name, setName] = useState(\"\");\n    let [numProjects, setNumProjects] = useState(\"\");\n    let [profileUrl, setProfileUrl] = useState(\"\");\n    let [beltColor, setBeltColor] = useState(\"\");\n\n    // create a submit handler below\n    const submitPet = (e)=> {\n        // e means the object created at the occurance of the event. It stores the value collected during the event if the event is stored in an input tag.\n\n        // the default behavior of a form when it is submitted, is to reload the page. we can prevent this from happening using preventDefault();\n        e.preventDefault();\n\n        // WE WANT TO CREATE AN OBJECT THAT WE CAN STORE ALL THE PET FORM SUBMISSIONS INTO\n        let [] = useState([]);\n        console.log(\"submitted!\");\n    }\n\n\n\n\n    return (\n        <>\n            <h3>Hi, there! This is the Ninja Form component!</h3>\n\n            <form >\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Name:</label>\n                    <input type=\"text\" onChange= {(e)=> setName(e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Number of Projects:</label>\n                    <input type=\"number\" onChange= {(e)=> setNumProjects(e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Profile pic url: profileUrl</label>\n                    <input type=\"text\" onChange= {(e)=> setProfileUrl(e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Belt Color: </label>\n                    <select  onChange= {(e)=> setBeltColor(e.target.value)} name=\"\" id=\"\" className=\"form-select\">\n                        <option value=\"\" disabled selected hidden>Select a belt color!</option>\n                        <option value=\"white\">White</option>\n                        <option value=\"yellow\">Yellow</option>\n                        <option value=\"green\">Green</option>\n                        <option value=\"blue\">Blue</option>\n                        <option value=\"red\">Red</option>\n                        <option value=\"black\">Black</option>\n                    </select>\n                </div> <br/>\n                <input type=\"submit\" value=\"Add Pet\" className=\"btn btn-success\" />\n            </form>\n        </>\n    )\n}\n\n\n\nexport default NinjaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}